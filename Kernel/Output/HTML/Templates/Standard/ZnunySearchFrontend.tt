# --
# Copyright (C) 2012 Znuny GmbH, https://znuny.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY. For details, see
# the enclosed file COPYING for license information (AGPL). If you
# did not receive this file, see http://www.gnu.org/licenses/agpl.txt.
# --

<div class="SearchContainer" id="SearchBox">
    <div class="zs-box" id="zs-box">
        <div class="zs-dropdownwrap Hidden" ref="dropdownwrapbox">
            <button v-click-outside-options="HideOptionsDropdown"
            [% IF !Data.Connection %] disabled = "disabled" [% END %]
                class="zs-dropdowntoggle"
                type="button"
                @click="ToggleOptionsDropdown()"
            >
                <span>[% Data.ActiveEngineName %]</span>
                [% IF Data.Connection %]
                    <i style="color:green" class="fa fa-check"></i>
                [% ELSE %]
                    <i style="color:red" class="fa fa-times"></i>
                [% END %]
                <i ref="dropdownOptionsCaret" class="fa fa-caret-right"></i>
            </button>
            <div class="zs-scrollable-options Hidden" ref="dropdownOptions">
                <template v-for="(option, index) in MoreOptions">
                    <div v-if="option.Type === 'dropdown'" class="zs-dropdown" >
                        <div class="zs-dropdowncontent">
                            <ul class="zs-dropdownlist">
                                <li
                                @click="ChooseFromOptions(index, 'dropdown')"
                                :class="'zs-option ' + option.Class"
                                :ref="'optionItem'+index"> {{ option.Name }}
                                    <i
                                    :ref="'optionItemCaret'+index"
                                    class="fa fa-caret-right">
                                    </i>
                                </li>

                                <div class="zs-dropdown Hidden" ref="dropdownOptionsItem">
                                    <ul class="zs-dropdownlist zs-dropdownoddlist">
                                        <li v-for="(item, itemIndex) in option.Items"
                                            class = 'zs-option'
                                            :ref="'dropdownOptionItem'+index+'_'+itemIndex"
                                            @click="ChooseFromOptionsItem(item, itemIndex)"
                                        >
                                            <div class='zs-saved-filters-counter'>{{ itemIndex + 1 }}:</div>
                                            <div v-for="(filterdata, property) in item">
                                                <div class='zs-option-filters-row'>
                                                    <span class='zs-saved-filters-property'>{{ FieldName(property) }}<span>
                                                    <div v-for="(data, dataindex) in filterdata">
                                                        <template v-if="data.Operator && data.Value">
                                                            <span v-if="data.Operator" class='zs-saved-filters-operator'>
                                                                {{data.Operator}}
                                                            </span>
                                                            <span v-else class='zs-saved-filters-operator'>
                                                                =
                                                            </span>
                                                            <span class='zs-saved-filters-value'>:
                                                                <template v-for="(value, valueIndex) in MakeAnArray(data.Value)">
                                                                    {{value}}<template v-if="valueIndex != Object.keys(MakeAnArray(data.Value)).length - 1">, </template>
                                                                </template>
                                                            </span>
                                                        </template>
                                                        <template v-else>
                                                            <span class='zs-saved-filters-operator'>
                                                                =
                                                            </span>
                                                            <span class='zs-saved-filters-value'>
                                                                {{data}}
                                                            </span>
                                                        </template>
                                                    </div>
                                                </div>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </ul>
                        </div>
                    </div>
                </template>
            </div>
        </div>

        <form id='Filters' class="zs-scrollable" role="search" @submit="Submit">
            <ul class="zs-tokens" ref="dropdownlist" v-click-outside="HideDropdown">
                <template v-for="(Param, ParamIndex) in Params">
                    <li v-if="Param.label" class="zs-token" ref="token">
                        <ul class="zs-tokenwrap">
                            <li :ref="'tokenLabel'+ParamIndex" class="zs-tokenpart zs-label">
                                {{ FieldName(Param.label) }}
                            </li>
                            <li :ref="'tokenOperator'+ParamIndex" v-if="Param.operator" class="zs-tokenpart zs-operator">{{Param.operator.text}}</li>
                            <li :ref="'tokenValue'+ParamIndex" v-if="Param.value" class="zs-tokenpart zs-value"><button @click="ChangeParamValue(Param)" class="zs-tokenchange" type="button" v-html="ParamValueText(Param.value)"></button></li>
                        </ul>
                        <button v-if="Param.value" class="zs-tokenremove" type="button" @click="RemoveToken(ParamIndex)">&times;</button>
                    </li>
                    <li v-if="Param.type === 'input'" class="zs-inputwrap" ref="inputWrap">
                        <input
                            ref="inputField"
                            v-model="InputText"
                            @click="ClickedOnInput"
                            @keydown="InputKeystroke"
                            :disabled="InputDisabled"
                            class="zs-input"
                            type="text"
                            placeholder="Click here and type.."
                            autocomplete="off"
                        />
                    </li>
                </template>
            </ul>
            <template v-for="(Param, ParamIndex) in Params">
                <div v-if="Param.type === 'dropdown'" class="zs-dropdown" ref="dropdown">
                        <div class="zs-dropdowncontent">
                            <div v-if="DropdownMessage" class="zs-dropdownmessage">{{ DropdownMessage }}</div>
                            <svg v-if="Loading" class="zs-loader" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="200px" height="200px" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid">
                                <circle cx="50" cy="50" fill="none" stroke="#fff" stroke-width="10" r="35" stroke-dasharray="164.93361431346415 56.97787143782138">
                                    <animateTransform attributeName="transform" type="rotate" repeatCount="indefinite" dur="1s" values="0 50 50;360 50 50" keyTimes="0;1"></animateTransform>
                                </circle>
                            </svg>
                            <ul class="zs-dropdownlist zs-dropdownevenlist">
                                <li v-for="(entry, entryindex) in Param.items.filter((item) => item.visible === true)" :class="{ 'active-zs-option': IsActive(entry.text) }" ref="dropdownitem">
                                    <button
                                        ref="dropdownbutton"
                                        @keydown="DropdownKeystroke"
                                        @click="ChooseFromList(entry, entryindex)"
                                        type="button"
                                        class="zs-option"
                                    >
                                        {{ FieldName(entry.text) }}
                                    </button>
                                </li>
                            </ul>
                        </div>
                    </div>
            </template>
        </form>
        <button v-if="Params.length > 1" class="zs-clear" type="button" @click="ClearAll">&times;</button>
        <button [% IF !Data.Connection %] disabled = "disabled" [% END %] class="zs-submit" ref="searchformsubmitbutton" type="button" @click="Submit">
            <i class="fa fa-search"></i>
        </button>
    </div>
    <input type="hidden" id="StartHit" value="[% Data.StartHit %]">
    <div id="TicketList"></div>
</div>
